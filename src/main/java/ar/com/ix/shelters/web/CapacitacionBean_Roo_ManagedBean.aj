// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.com.ix.shelters.web;

import ar.com.ix.shelters.model.Capacitacion;
import ar.com.ix.shelters.web.CapacitacionBean;
import ar.com.ix.shelters.web.util.MessageFactory;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.component.html.HtmlOutputText;
import javax.faces.component.html.HtmlPanelGrid;
import javax.faces.context.FacesContext;
import javax.faces.convert.DateTimeConverter;
import org.primefaces.component.calendar.Calendar;
import org.primefaces.component.inputtext.InputText;
import org.primefaces.component.message.Message;
import org.primefaces.component.outputlabel.OutputLabel;
import org.primefaces.context.RequestContext;
import org.primefaces.event.CloseEvent;

privileged aspect CapacitacionBean_Roo_ManagedBean {
    
    declare @type: CapacitacionBean: @ManagedBean(name = "capacitacionBean");
    
    declare @type: CapacitacionBean: @SessionScoped;
    
    private String CapacitacionBean.name = "Capacitacions";
    
    private Capacitacion CapacitacionBean.capacitacion;
    
    private List<Capacitacion> CapacitacionBean.allCapacitacions;
    
    private boolean CapacitacionBean.dataVisible = false;
    
    private List<String> CapacitacionBean.columns;
    
    private HtmlPanelGrid CapacitacionBean.createPanelGrid;
    
    private HtmlPanelGrid CapacitacionBean.editPanelGrid;
    
    private HtmlPanelGrid CapacitacionBean.viewPanelGrid;
    
    private boolean CapacitacionBean.createDialogVisible = false;
    
    @PostConstruct
    public void CapacitacionBean.init() {
        columns = new ArrayList<String>();
        columns.add("titulo");
        columns.add("autor");
        columns.add("descripcion");
        columns.add("fecha");
        columns.add("linkALaCapacitacion");
    }
    
    public String CapacitacionBean.getName() {
        return name;
    }
    
    public List<String> CapacitacionBean.getColumns() {
        return columns;
    }
    
    public List<Capacitacion> CapacitacionBean.getAllCapacitacions() {
        return allCapacitacions;
    }
    
    public void CapacitacionBean.setAllCapacitacions(List<Capacitacion> allCapacitacions) {
        this.allCapacitacions = allCapacitacions;
    }
    
    public String CapacitacionBean.findAllCapacitacions() {
        allCapacitacions = Capacitacion.findAllCapacitacions();
        dataVisible = !allCapacitacions.isEmpty();
        return null;
    }
    
    public boolean CapacitacionBean.isDataVisible() {
        return dataVisible;
    }
    
    public void CapacitacionBean.setDataVisible(boolean dataVisible) {
        this.dataVisible = dataVisible;
    }
    
    public HtmlPanelGrid CapacitacionBean.getCreatePanelGrid() {
        if (createPanelGrid == null) {
            createPanelGrid = populateCreatePanel();
        }
        return createPanelGrid;
    }
    
    public void CapacitacionBean.setCreatePanelGrid(HtmlPanelGrid createPanelGrid) {
        this.createPanelGrid = createPanelGrid;
    }
    
    public HtmlPanelGrid CapacitacionBean.getEditPanelGrid() {
        if (editPanelGrid == null) {
            editPanelGrid = populateEditPanel();
        }
        return editPanelGrid;
    }
    
    public void CapacitacionBean.setEditPanelGrid(HtmlPanelGrid editPanelGrid) {
        this.editPanelGrid = editPanelGrid;
    }
    
    public HtmlPanelGrid CapacitacionBean.getViewPanelGrid() {
        return populateViewPanel();
    }
    
    public void CapacitacionBean.setViewPanelGrid(HtmlPanelGrid viewPanelGrid) {
        this.viewPanelGrid = viewPanelGrid;
    }
    
    public HtmlPanelGrid CapacitacionBean.populateCreatePanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        javax.faces.application.Application application = facesContext.getApplication();
        ExpressionFactory expressionFactory = application.getExpressionFactory();
        ELContext elContext = facesContext.getELContext();
        
        HtmlPanelGrid htmlPanelGrid = (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
        
        OutputLabel tituloCreateOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        tituloCreateOutput.setFor("tituloCreateInput");
        tituloCreateOutput.setId("tituloCreateOutput");
        tituloCreateOutput.setValue("Titulo:");
        htmlPanelGrid.getChildren().add(tituloCreateOutput);
        
        InputText tituloCreateInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        tituloCreateInput.setId("tituloCreateInput");
        tituloCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{capacitacionBean.capacitacion.titulo}", String.class));
        tituloCreateInput.setRequired(false);
        htmlPanelGrid.getChildren().add(tituloCreateInput);
        
        Message tituloCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        tituloCreateInputMessage.setId("tituloCreateInputMessage");
        tituloCreateInputMessage.setFor("tituloCreateInput");
        tituloCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(tituloCreateInputMessage);
        
        OutputLabel autorCreateOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        autorCreateOutput.setFor("autorCreateInput");
        autorCreateOutput.setId("autorCreateOutput");
        autorCreateOutput.setValue("Autor:");
        htmlPanelGrid.getChildren().add(autorCreateOutput);
        
        InputText autorCreateInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        autorCreateInput.setId("autorCreateInput");
        autorCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{capacitacionBean.capacitacion.autor}", String.class));
        autorCreateInput.setRequired(false);
        htmlPanelGrid.getChildren().add(autorCreateInput);
        
        Message autorCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        autorCreateInputMessage.setId("autorCreateInputMessage");
        autorCreateInputMessage.setFor("autorCreateInput");
        autorCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(autorCreateInputMessage);
        
        OutputLabel descripcionCreateOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        descripcionCreateOutput.setFor("descripcionCreateInput");
        descripcionCreateOutput.setId("descripcionCreateOutput");
        descripcionCreateOutput.setValue("Descripcion:");
        htmlPanelGrid.getChildren().add(descripcionCreateOutput);
        
        InputText descripcionCreateInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        descripcionCreateInput.setId("descripcionCreateInput");
        descripcionCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{capacitacionBean.capacitacion.descripcion}", String.class));
        descripcionCreateInput.setRequired(false);
        htmlPanelGrid.getChildren().add(descripcionCreateInput);
        
        Message descripcionCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        descripcionCreateInputMessage.setId("descripcionCreateInputMessage");
        descripcionCreateInputMessage.setFor("descripcionCreateInput");
        descripcionCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(descripcionCreateInputMessage);
        
        OutputLabel fechaCreateOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        fechaCreateOutput.setFor("fechaCreateInput");
        fechaCreateOutput.setId("fechaCreateOutput");
        fechaCreateOutput.setValue("Fecha:");
        htmlPanelGrid.getChildren().add(fechaCreateOutput);
        
        Calendar fechaCreateInput = (Calendar) application.createComponent(Calendar.COMPONENT_TYPE);
        fechaCreateInput.setId("fechaCreateInput");
        fechaCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{capacitacionBean.capacitacion.fecha}", Date.class));
        fechaCreateInput.setNavigator(true);
        fechaCreateInput.setEffect("slideDown");
        fechaCreateInput.setPattern("dd/MM/yyyy");
        fechaCreateInput.setRequired(false);
        htmlPanelGrid.getChildren().add(fechaCreateInput);
        
        Message fechaCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        fechaCreateInputMessage.setId("fechaCreateInputMessage");
        fechaCreateInputMessage.setFor("fechaCreateInput");
        fechaCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(fechaCreateInputMessage);
        
        OutputLabel linkALaCapacitacionCreateOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        linkALaCapacitacionCreateOutput.setFor("linkALaCapacitacionCreateInput");
        linkALaCapacitacionCreateOutput.setId("linkALaCapacitacionCreateOutput");
        linkALaCapacitacionCreateOutput.setValue("Link A La Capacitacion:");
        htmlPanelGrid.getChildren().add(linkALaCapacitacionCreateOutput);
        
        InputText linkALaCapacitacionCreateInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        linkALaCapacitacionCreateInput.setId("linkALaCapacitacionCreateInput");
        linkALaCapacitacionCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{capacitacionBean.capacitacion.linkALaCapacitacion}", String.class));
        linkALaCapacitacionCreateInput.setRequired(false);
        htmlPanelGrid.getChildren().add(linkALaCapacitacionCreateInput);
        
        Message linkALaCapacitacionCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        linkALaCapacitacionCreateInputMessage.setId("linkALaCapacitacionCreateInputMessage");
        linkALaCapacitacionCreateInputMessage.setFor("linkALaCapacitacionCreateInput");
        linkALaCapacitacionCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(linkALaCapacitacionCreateInputMessage);
        
        return htmlPanelGrid;
    }
    
    public HtmlPanelGrid CapacitacionBean.populateEditPanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        javax.faces.application.Application application = facesContext.getApplication();
        ExpressionFactory expressionFactory = application.getExpressionFactory();
        ELContext elContext = facesContext.getELContext();
        
        HtmlPanelGrid htmlPanelGrid = (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
        
        OutputLabel tituloEditOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        tituloEditOutput.setFor("tituloEditInput");
        tituloEditOutput.setId("tituloEditOutput");
        tituloEditOutput.setValue("Titulo:");
        htmlPanelGrid.getChildren().add(tituloEditOutput);
        
        InputText tituloEditInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        tituloEditInput.setId("tituloEditInput");
        tituloEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{capacitacionBean.capacitacion.titulo}", String.class));
        tituloEditInput.setRequired(false);
        htmlPanelGrid.getChildren().add(tituloEditInput);
        
        Message tituloEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        tituloEditInputMessage.setId("tituloEditInputMessage");
        tituloEditInputMessage.setFor("tituloEditInput");
        tituloEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(tituloEditInputMessage);
        
        OutputLabel autorEditOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        autorEditOutput.setFor("autorEditInput");
        autorEditOutput.setId("autorEditOutput");
        autorEditOutput.setValue("Autor:");
        htmlPanelGrid.getChildren().add(autorEditOutput);
        
        InputText autorEditInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        autorEditInput.setId("autorEditInput");
        autorEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{capacitacionBean.capacitacion.autor}", String.class));
        autorEditInput.setRequired(false);
        htmlPanelGrid.getChildren().add(autorEditInput);
        
        Message autorEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        autorEditInputMessage.setId("autorEditInputMessage");
        autorEditInputMessage.setFor("autorEditInput");
        autorEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(autorEditInputMessage);
        
        OutputLabel descripcionEditOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        descripcionEditOutput.setFor("descripcionEditInput");
        descripcionEditOutput.setId("descripcionEditOutput");
        descripcionEditOutput.setValue("Descripcion:");
        htmlPanelGrid.getChildren().add(descripcionEditOutput);
        
        InputText descripcionEditInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        descripcionEditInput.setId("descripcionEditInput");
        descripcionEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{capacitacionBean.capacitacion.descripcion}", String.class));
        descripcionEditInput.setRequired(false);
        htmlPanelGrid.getChildren().add(descripcionEditInput);
        
        Message descripcionEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        descripcionEditInputMessage.setId("descripcionEditInputMessage");
        descripcionEditInputMessage.setFor("descripcionEditInput");
        descripcionEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(descripcionEditInputMessage);
        
        OutputLabel fechaEditOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        fechaEditOutput.setFor("fechaEditInput");
        fechaEditOutput.setId("fechaEditOutput");
        fechaEditOutput.setValue("Fecha:");
        htmlPanelGrid.getChildren().add(fechaEditOutput);
        
        Calendar fechaEditInput = (Calendar) application.createComponent(Calendar.COMPONENT_TYPE);
        fechaEditInput.setId("fechaEditInput");
        fechaEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{capacitacionBean.capacitacion.fecha}", Date.class));
        fechaEditInput.setNavigator(true);
        fechaEditInput.setEffect("slideDown");
        fechaEditInput.setPattern("dd/MM/yyyy");
        fechaEditInput.setRequired(false);
        htmlPanelGrid.getChildren().add(fechaEditInput);
        
        Message fechaEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        fechaEditInputMessage.setId("fechaEditInputMessage");
        fechaEditInputMessage.setFor("fechaEditInput");
        fechaEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(fechaEditInputMessage);
        
        OutputLabel linkALaCapacitacionEditOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        linkALaCapacitacionEditOutput.setFor("linkALaCapacitacionEditInput");
        linkALaCapacitacionEditOutput.setId("linkALaCapacitacionEditOutput");
        linkALaCapacitacionEditOutput.setValue("Link A La Capacitacion:");
        htmlPanelGrid.getChildren().add(linkALaCapacitacionEditOutput);
        
        InputText linkALaCapacitacionEditInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        linkALaCapacitacionEditInput.setId("linkALaCapacitacionEditInput");
        linkALaCapacitacionEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{capacitacionBean.capacitacion.linkALaCapacitacion}", String.class));
        linkALaCapacitacionEditInput.setRequired(false);
        htmlPanelGrid.getChildren().add(linkALaCapacitacionEditInput);
        
        Message linkALaCapacitacionEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        linkALaCapacitacionEditInputMessage.setId("linkALaCapacitacionEditInputMessage");
        linkALaCapacitacionEditInputMessage.setFor("linkALaCapacitacionEditInput");
        linkALaCapacitacionEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(linkALaCapacitacionEditInputMessage);
        
        return htmlPanelGrid;
    }
    
    public HtmlPanelGrid CapacitacionBean.populateViewPanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        javax.faces.application.Application application = facesContext.getApplication();
        ExpressionFactory expressionFactory = application.getExpressionFactory();
        ELContext elContext = facesContext.getELContext();
        
        HtmlPanelGrid htmlPanelGrid = (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
        
        HtmlOutputText tituloLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        tituloLabel.setId("tituloLabel");
        tituloLabel.setValue("Titulo:");
        htmlPanelGrid.getChildren().add(tituloLabel);
        
        HtmlOutputText tituloValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        tituloValue.setId("tituloValue");
        tituloValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{capacitacionBean.capacitacion.titulo}", String.class));
        htmlPanelGrid.getChildren().add(tituloValue);
        
        HtmlOutputText autorLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        autorLabel.setId("autorLabel");
        autorLabel.setValue("Autor:");
        htmlPanelGrid.getChildren().add(autorLabel);
        
        HtmlOutputText autorValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        autorValue.setId("autorValue");
        autorValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{capacitacionBean.capacitacion.autor}", String.class));
        htmlPanelGrid.getChildren().add(autorValue);
        
        HtmlOutputText descripcionLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        descripcionLabel.setId("descripcionLabel");
        descripcionLabel.setValue("Descripcion:");
        htmlPanelGrid.getChildren().add(descripcionLabel);
        
        HtmlOutputText descripcionValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        descripcionValue.setId("descripcionValue");
        descripcionValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{capacitacionBean.capacitacion.descripcion}", String.class));
        htmlPanelGrid.getChildren().add(descripcionValue);
        
        HtmlOutputText fechaLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        fechaLabel.setId("fechaLabel");
        fechaLabel.setValue("Fecha:");
        htmlPanelGrid.getChildren().add(fechaLabel);
        
        HtmlOutputText fechaValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        fechaValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{capacitacionBean.capacitacion.fecha}", Date.class));
        DateTimeConverter fechaValueConverter = (DateTimeConverter) application.createConverter(DateTimeConverter.CONVERTER_ID);
        fechaValueConverter.setPattern("dd/MM/yyyy");
        fechaValue.setConverter(fechaValueConverter);
        htmlPanelGrid.getChildren().add(fechaValue);
        
        HtmlOutputText linkALaCapacitacionLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        linkALaCapacitacionLabel.setId("linkALaCapacitacionLabel");
        linkALaCapacitacionLabel.setValue("Link A La Capacitacion:");
        htmlPanelGrid.getChildren().add(linkALaCapacitacionLabel);
        
        HtmlOutputText linkALaCapacitacionValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        linkALaCapacitacionValue.setId("linkALaCapacitacionValue");
        linkALaCapacitacionValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{capacitacionBean.capacitacion.linkALaCapacitacion}", String.class));
        htmlPanelGrid.getChildren().add(linkALaCapacitacionValue);
        
        return htmlPanelGrid;
    }
    
    public Capacitacion CapacitacionBean.getCapacitacion() {
        if (capacitacion == null) {
            capacitacion = new Capacitacion();
        }
        return capacitacion;
    }
    
    public void CapacitacionBean.setCapacitacion(Capacitacion capacitacion) {
        this.capacitacion = capacitacion;
    }
    
    public String CapacitacionBean.onEdit() {
        return null;
    }
    
    public boolean CapacitacionBean.isCreateDialogVisible() {
        return createDialogVisible;
    }
    
    public void CapacitacionBean.setCreateDialogVisible(boolean createDialogVisible) {
        this.createDialogVisible = createDialogVisible;
    }
    
    public String CapacitacionBean.displayList() {
        createDialogVisible = false;
        findAllCapacitacions();
        return "capacitacion";
    }
    
    public String CapacitacionBean.displayCreateDialog() {
        capacitacion = new Capacitacion();
        createDialogVisible = true;
        return "capacitacion";
    }
    
    public String CapacitacionBean.persist() {
        String message = "";
        if (capacitacion.getId() != null) {
            capacitacion.merge();
            message = "message_successfully_updated";
        } else {
            capacitacion.persist();
            message = "message_successfully_created";
        }
        RequestContext context = RequestContext.getCurrentInstance();
        context.execute("createDialogWidget.hide()");
        context.execute("editDialogWidget.hide()");
        
        FacesMessage facesMessage = MessageFactory.getMessage(message, "Capacitacion");
        FacesContext.getCurrentInstance().addMessage(null, facesMessage);
        reset();
        return findAllCapacitacions();
    }
    
    public String CapacitacionBean.delete() {
        capacitacion.remove();
        FacesMessage facesMessage = MessageFactory.getMessage("message_successfully_deleted", "Capacitacion");
        FacesContext.getCurrentInstance().addMessage(null, facesMessage);
        reset();
        return findAllCapacitacions();
    }
    
    public void CapacitacionBean.reset() {
        capacitacion = null;
        createDialogVisible = false;
    }
    
    public void CapacitacionBean.handleDialogClose(CloseEvent event) {
        reset();
    }
    
}
